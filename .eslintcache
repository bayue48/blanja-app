[{"D:\\Frontend\\blanja-app\\src\\components\\home\\categories.js":"1","D:\\Frontend\\blanja-app\\src\\components\\home\\new.js":"2","D:\\Frontend\\blanja-app\\src\\components\\navbar.js":"3","D:\\Frontend\\blanja-app\\src\\pages\\home.js":"4","D:\\Frontend\\blanja-app\\src\\pages\\auth\\login.js":"5","D:\\Frontend\\blanja-app\\src\\pages\\search.js":"6","D:\\Frontend\\blanja-app\\src\\pages\\category.js":"7","D:\\Frontend\\blanja-app\\src\\components\\productFooter.js":"8","D:\\Frontend\\blanja-app\\src\\components\\home\\popular.js":"9","D:\\Frontend\\blanja-app\\src\\assets\\index.js":"10","D:\\Frontend\\blanja-app\\src\\pages\\auth\\signup.js":"11","D:\\Frontend\\blanja-app\\src\\pages\\auth\\reset.js":"12","D:\\Frontend\\blanja-app\\src\\redux\\actions\\auth.js":"13","D:\\Frontend\\blanja-app\\src\\redux\\reducers\\auth.js":"14","D:\\Frontend\\blanja-app\\src\\redux\\store.js":"15","D:\\Frontend\\blanja-app\\src\\redux\\reducers\\cart.js":"16","D:\\Frontend\\blanja-app\\src\\redux\\reducers\\index.js":"17","D:\\Frontend\\blanja-app\\src\\redux\\actionTypes.js":"18","D:\\Frontend\\blanja-app\\src\\pages\\router.js":"19","D:\\Frontend\\blanja-app\\src\\pages\\detail.js":"20","D:\\Frontend\\blanja-app\\src\\index.js":"21","D:\\Frontend\\blanja-app\\src\\components\\rating.js":"22","D:\\Frontend\\blanja-app\\src\\pages\\trx\\bag.js":"23","D:\\Frontend\\blanja-app\\src\\pages\\trx\\checkout.js":"24","D:\\Frontend\\blanja-app\\src\\redux\\actions\\cart.js":"25","D:\\Frontend\\blanja-app\\src\\components\\account\\list.js":"26","D:\\Frontend\\blanja-app\\src\\components\\account\\addProduct.js":"27","D:\\Frontend\\blanja-app\\src\\components\\account\\sidebar.js":"28","D:\\Frontend\\blanja-app\\src\\components\\account\\editProduct.js":"29","D:\\Frontend\\blanja-app\\src\\components\\trx\\bag.js":"30","D:\\Frontend\\blanja-app\\src\\components\\product.js":"31","D:\\Frontend\\blanja-app\\src\\components\\Modal\\ModalAddAddress.js":"32","D:\\Frontend\\blanja-app\\src\\components\\Modal\\ModalChooseAddress.js":"33","D:\\Frontend\\blanja-app\\src\\pages\\account\\listProduct.js":"34","D:\\Frontend\\blanja-app\\src\\pages\\account\\profile.js":"35","D:\\Frontend\\blanja-app\\src\\components\\home\\carousel.js":"36","D:\\Frontend\\blanja-app\\src\\utility\\classJoiner.js":"37","D:\\Frontend\\blanja-app\\src\\pages\\404.js":"38","D:\\Frontend\\blanja-app\\src\\components\\account\\AddProduct.js":"39","D:\\Frontend\\blanja-app\\src\\components\\account\\EditProduct.js":"40","D:\\Frontend\\blanja-app\\src\\pages\\protect.js":"41","D:\\Frontend\\blanja-app\\src\\components\\account\\user.js":"42","D:\\Frontend\\blanja-app\\src\\components\\account\\ChangePassword.js":"43","D:\\Frontend\\blanja-app\\src\\components\\account\\ShippingAddress.js":"44","D:\\Frontend\\blanja-app\\src\\components\\account\\GetOrder.js":"45","D:\\Frontend\\blanja-app\\src\\pages\\auth\\forgot.js":"46","D:\\Frontend\\blanja-app\\src\\pages\\chat.js":"47","D:\\Frontend\\blanja-app\\src\\pages\\auth\\otp.js":"48","D:\\Frontend\\blanja-app\\src\\pages\\private.js":"49","D:\\Frontend\\blanja-app\\src\\reportWebVitals.js":"50"},{"size":6887,"mtime":1613589835617,"results":"51","hashOfConfig":"52"},{"size":2996,"mtime":1613589743843,"results":"53","hashOfConfig":"52"},{"size":15194,"mtime":1614013149479,"results":"54","hashOfConfig":"52"},{"size":487,"mtime":1612931963037,"results":"55","hashOfConfig":"52"},{"size":3976,"mtime":1614023176775,"results":"56","hashOfConfig":"52"},{"size":3522,"mtime":1613590028385,"results":"57","hashOfConfig":"52"},{"size":3398,"mtime":1613589951783,"results":"58","hashOfConfig":"52"},{"size":2696,"mtime":1613556978163,"results":"59","hashOfConfig":"52"},{"size":3012,"mtime":1613589881485,"results":"60","hashOfConfig":"52"},{"size":2568,"mtime":1613364022629,"results":"61","hashOfConfig":"52"},{"size":4980,"mtime":1614022933320,"results":"62","hashOfConfig":"52"},{"size":4105,"mtime":1614017137765,"results":"63","hashOfConfig":"52"},{"size":694,"mtime":1613112004418,"results":"64","hashOfConfig":"52"},{"size":1205,"mtime":1613978085615,"results":"65","hashOfConfig":"52"},{"size":500,"mtime":1613105587667,"results":"66","hashOfConfig":"52"},{"size":2200,"mtime":1613469041692,"results":"67","hashOfConfig":"52"},{"size":227,"mtime":1613468165409,"results":"68","hashOfConfig":"52"},{"size":537,"mtime":1613469044043,"results":"69","hashOfConfig":"52"},{"size":2744,"mtime":1614023828408,"results":"70","hashOfConfig":"52"},{"size":4095,"mtime":1613554176222,"results":"71","hashOfConfig":"52"},{"size":653,"mtime":1606663900316,"results":"72","hashOfConfig":"52"},{"size":1813,"mtime":1613971987840,"results":"73","hashOfConfig":"52"},{"size":3680,"mtime":1613537731943,"results":"74","hashOfConfig":"52"},{"size":13800,"mtime":1614007258759,"results":"75","hashOfConfig":"52"},{"size":1323,"mtime":1613468764979,"results":"76","hashOfConfig":"52"},{"size":6525,"mtime":1614001278863,"results":"77","hashOfConfig":"52"},{"size":18166,"mtime":1613556588374,"results":"78","hashOfConfig":"52"},{"size":5057,"mtime":1614024280913,"results":"79","hashOfConfig":"52"},{"size":19232,"mtime":1613556587766,"results":"80","hashOfConfig":"52"},{"size":3056,"mtime":1613544220007,"results":"81","hashOfConfig":"52"},{"size":8956,"mtime":1614011845880,"results":"82","hashOfConfig":"52"},{"size":6334,"mtime":1614009381488,"results":"83","hashOfConfig":"52"},{"size":3531,"mtime":1614003769021,"results":"84","hashOfConfig":"52"},{"size":406,"mtime":1613568321184,"results":"85","hashOfConfig":"52"},{"size":334,"mtime":1613368473004,"results":"86","hashOfConfig":"52"},{"size":3248,"mtime":1612931456379,"results":"87","hashOfConfig":"52"},{"size":67,"mtime":1613541780306,"results":"88","hashOfConfig":"52"},{"size":170,"mtime":1613558385985,"results":"89","hashOfConfig":"52"},{"size":13928,"mtime":1613968827430,"results":"90","hashOfConfig":"52"},{"size":15581,"mtime":1613999294091,"results":"91","hashOfConfig":"52"},{"size":781,"mtime":1613552946839,"results":"92","hashOfConfig":"52"},{"size":14186,"mtime":1614009159752,"results":"93","hashOfConfig":"52"},{"size":3827,"mtime":1613998957171,"results":"94","hashOfConfig":"52"},{"size":5453,"mtime":1614003931287,"results":"95","hashOfConfig":"52"},{"size":2947,"mtime":1614008149964,"results":"96","hashOfConfig":"52"},{"size":2822,"mtime":1614017535519,"results":"97","hashOfConfig":"52"},{"size":5082,"mtime":1614013756910,"results":"98","hashOfConfig":"52"},{"size":2164,"mtime":1614018775147,"results":"99","hashOfConfig":"52"},{"size":595,"mtime":1614023889258,"results":"100","hashOfConfig":"52"},{"size":362,"mtime":499162500000,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"a1uxhf",{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"110"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"115"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Frontend\\blanja-app\\src\\components\\home\\categories.js",["216"],"D:\\Frontend\\blanja-app\\src\\components\\home\\new.js",[],["217","218"],"D:\\Frontend\\blanja-app\\src\\components\\navbar.js",["219"],"import React, { Component } from \"react\";\r\nimport { logo, filter, cart, mail, bell, avatar } from \"../../src/assets\";\r\nimport { Link, withRouter, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../redux/actions/auth\";\r\nimport {\r\n  Navbar,\r\n  Container,\r\n  InputGroup,\r\n  Image,\r\n  FormControl,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\n\r\nconst base_url = process.env.REACT_APP_API;\r\n\r\nclass navbar extends Component {\r\n  state = {\r\n    product_name: ``,\r\n    current_url: ``,\r\n    color: \"\",\r\n    size: \"\",\r\n    category: \"\",\r\n    fetchSize: [],\r\n    fetchColor: [],\r\n    searchName: \"\",\r\n  };\r\n\r\n  clickFilterHandler = () => {\r\n    this.setState({\r\n      color: \"\",\r\n      size: \"\",\r\n      category: \"\",\r\n    });\r\n  };\r\n\r\n  clickOptHandler = (e) => {\r\n    this.setState({\r\n      [e.target.name]: `&${[e.target.name]}=${e.target.id}`,\r\n    });\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //logout\r\n  logoutApp = () => {\r\n    const config = {\r\n      headers: {\r\n        \"x-access-token\": \"Bearer \" + this.props.token,\r\n      },\r\n    };\r\n    const data = \"\";\r\n    console.log(\"token\", this.props.token);\r\n    axios\r\n      .post(base_url + \"/auth/logout\", data, config)\r\n      .then((res) => {\r\n        this.props.logoutRedux();\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  search = () => {};\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    const { isLogin } = this.props;\r\n    let loginBtn;\r\n    if (isLogin === true) {\r\n      loginBtn = (\r\n        <>\r\n          <div className=\"text-decoration-none\">\r\n            <Link to=\"/notification\">\r\n              <button className=\"btn btn-default mr-2\">\r\n                <img src={bell} alt=\"\" />\r\n              </button>\r\n            </Link>\r\n            <Link to=\"/chat\">\r\n              <button className=\"btn btn-default mr-2\">\r\n                <img src={mail} alt=\"\" />\r\n              </button>\r\n            </Link>\r\n            <Link to=\"/account\">\r\n              {/* <p>Username</p> */}\r\n              <button className=\"btn btn-default mr-2\">\r\n                <img src={avatar} alt=\"\" />\r\n              </button>\r\n            </Link>\r\n            <button\r\n              className=\"btn btn-light\"\r\n              data-toggle=\"modal\"\r\n              data-target=\".bd-example-modal-sm\"\r\n              data-backdrop=\"false\"\r\n              style={{ color: \"grey\", textDecoration: \"none\" }}\r\n            >\r\n              <i class=\"fas fa-sign-out-alt\"></i>\r\n            </button>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      loginBtn = (\r\n        <>\r\n          <div style={{ display: \"flex\" }}>\r\n            <div className=\"login\">\r\n              <Link\r\n                to={{\r\n                  pathname: \"/login\",\r\n                  state: this.state,\r\n                }}\r\n              >\r\n                <div className=\"btn btn-full\" type=\"submit\">\r\n                  Login\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"signup\">\r\n              <Link\r\n                to={{\r\n                  pathname: \"/signup\",\r\n                  state: this.state,\r\n                }}\r\n              >\r\n                <div\r\n                  href=\"signup\"\r\n                  className=\"btn btn-shadow ml-4\"\r\n                  type=\"submit\"\r\n                >\r\n                  Signup\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Navbar\r\n          expand=\"md lg\"\r\n          className=\"sticky-top navbar-light bg-light shadow rounded p-3 mb-5\"\r\n        >\r\n          <Container>\r\n            <Navbar.Brand href=\"/\">\r\n              <Image src={logo} alt=\"Brand\" />\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav \">\r\n              <div className=\"d-flex flex-row justify-content-center\">\r\n                <InputGroup>\r\n                  <FormControl\r\n                    className=\"search-form py-2 border-right-0\"\r\n                    placeholder=\"Search\"\r\n                    aria-label=\"Search\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    name=\"product_name\"\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) =>\r\n                      this.setState({ searchName: e.target.value })\r\n                    }\r\n                  />\r\n                  <InputGroup.Append\r\n                    className=\"input-group-text search-btn bg-white\"\r\n                    type=\"submit\"\r\n                  >\r\n                    <Link\r\n                      to={{\r\n                        pathname: \"/search\",\r\n                        search: \"?name=\" + this.state.searchName,\r\n                      }}\r\n                    >\r\n                      <svg\r\n                        width=\"1em\"\r\n                        height=\"1em\"\r\n                        viewBox=\"0 0 16 16\"\r\n                        class=\"bi bi-search\"\r\n                        fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        style={{ color: \"grey\", textDecoration: \"none\" }}\r\n                      >\r\n                        <path\r\n                          fill-rule=\"evenodd\"\r\n                          d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\"\r\n                        />\r\n                        <path\r\n                          fill-rule=\"evenodd\"\r\n                          d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\"\r\n                        />\r\n                      </svg>\r\n                    </Link>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n                <div\r\n                  className=\"btn filter-btn\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#FilterModal\"\r\n                  data-backdrop=\"false\"\r\n                >\r\n                  <Image src={filter} alt=\"Filter\" />\r\n                </div>\r\n              </div>\r\n              <Nav className=\"mr-auto d-flex flex-row justify-content-center align-items-center\">\r\n                <div className=\"cart\">\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"/cart\",\r\n                      state: this.state,\r\n                    }}\r\n                  >\r\n                    <div className=\"btn cart-btn\">\r\n                      <Image src={cart} alt=\"Cart\" />\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n                <div>{loginBtn}</div>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n\r\n        {/* filter */}\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"FilterModal\"\r\n          tabindex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"exampleModalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"FilterModalLabel\">\r\n                  Filter\r\n                </h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <strong>Colors</strong>\r\n                <br></br>\r\n                <div className=\"row d-flex\">\r\n                  <button\r\n                    id=\"1\"\r\n                    name=\"color\"\r\n                    className=\"btn btn-dark ml-2\"\r\n                    onClick={this.clickOptHandler}\r\n                  >\r\n                    Black\r\n                  </button>\r\n                  <button\r\n                    id=\"2\"\r\n                    name=\"color\"\r\n                    className=\"btn btn-light ml-2\"\r\n                    onClick={this.clickOptHandler}\r\n                  >\r\n                    White\r\n                  </button>\r\n                  <button\r\n                    id=\"3\"\r\n                    name=\"color\"\r\n                    className=\"btn btn-danger ml-3\"\r\n                    width=\"100\"\r\n                    onClick={this.clickOptHandler}\r\n                  >\r\n                    Red\r\n                  </button>\r\n                  <button\r\n                    id=\"4\"\r\n                    name=\"color\"\r\n                    className=\"btn btn-success ml-2\"\r\n                    onClick={this.clickOptHandler}\r\n                  >\r\n                    Green\r\n                  </button>\r\n                  <button\r\n                    id=\"5\"\r\n                    name=\"color\"\r\n                    className=\"btn btn-primary ml-2\"\r\n                    onClick={this.clickOptHandler}\r\n                  >\r\n                    Blue\r\n                  </button>\r\n                </div>\r\n                <div className=\"dropdown-divider\"></div>\r\n                <strong>Sizes</strong>\r\n                <br></br>\r\n                <div className=\"row d-flex ml-2\">\r\n                  <button\r\n                    id=\"1\"\r\n                    name=\"size\"\r\n                    className=\"btn btn-outline-secondary mr-2 mb-1\"\r\n                    onClick={this.clickOptHandler}\r\n                  >\r\n                    XS\r\n                  </button>\r\n                  <button\r\n                    id=\"2\"\r\n                    name=\"size\"\r\n                    className=\"btn btn-outline-secondary mr-2 mb-1\"\r\n                    onClick={this.clickOptHandler}\r\n                  >\r\n                    S\r\n                  </button>\r\n                  <button\r\n                    id=\"3\"\r\n                    name=\"size\"\r\n                    className=\"btn btn-outline-secondary mr-2 mb-1\"\r\n                    onClick={this.clickOptHandler}\r\n                  >\r\n                    M\r\n                  </button>\r\n                  <button\r\n                    id=\"4\"\r\n                    name=\"size\"\r\n                    className=\"btn btn-outline-secondary mr-2 mb-1\"\r\n                    onClick={this.clickOptHandler}\r\n                  >\r\n                    L\r\n                  </button>\r\n                  <button\r\n                    id=\"5\"\r\n                    name=\"size\"\r\n                    className=\"btn btn-outline-secondary mr-2 mb-1\"\r\n                    onClick={this.clickOptHandler}\r\n                  >\r\n                    XL\r\n                  </button>\r\n                </div>\r\n                <div className=\"dropdown-divider\"></div>\r\n                <strong>Category</strong>\r\n                <br></br>\r\n                <button\r\n                  id=\"1\"\r\n                  name=\"category\"\r\n                  className=\"btn btn-outline-secondary ml-2\"\r\n                  onClick={this.clickOptHandler}\r\n                >\r\n                  T-shirt\r\n                </button>\r\n                <button\r\n                  id=\"2\"\r\n                  name=\"category\"\r\n                  className=\"btn btn-outline-secondary ml-2\"\r\n                  onClick={this.clickOptHandler}\r\n                >\r\n                  Short\r\n                </button>\r\n                <button\r\n                  id=\"3\"\r\n                  name=\"category\"\r\n                  className=\"btn btn-outline-secondary ml-2\"\r\n                  onClick={this.clickOptHandler}\r\n                >\r\n                  Jacket\r\n                </button>\r\n                <button\r\n                  id=\"4\"\r\n                  name=\"category\"\r\n                  className=\"btn btn-outline-secondary ml-2\"\r\n                  onClick={this.clickOptHandler}\r\n                >\r\n                  Pants\r\n                </button>\r\n                <button\r\n                  id=\"5\"\r\n                  name=\"category\"\r\n                  className=\"btn btn-outline-secondary ml-2\"\r\n                  onClick={this.clickOptHandler}\r\n                >\r\n                  Shoes\r\n                </button>\r\n                <div className=\"dropdown-divider\"></div>\r\n                <strong>Brand</strong>\r\n                <select className=\"text-muted\" style={{ border: \"none\" }}>\r\n                  <option disabled selected hidden>\r\n                    Adidas, Original, Hololive and many More\r\n                  </option>\r\n                  <option>Adidas</option>\r\n                  <option>Original</option>\r\n                  <option>Hololive</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-secondary rounded-pill mr-1\"\r\n                  style={{ width: \"200px\" }}\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Discard\r\n                </button>\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/search\",\r\n                    search:\r\n                      this.props.history.location.search +\r\n                      this.state.color +\r\n                      this.state.size +\r\n                      this.state.category,\r\n                  }}\r\n                >\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger rounded-pill ml-auto ml-1\"\r\n                    style={{ width: \"200px\" }}\r\n                  >\r\n                    Apply\r\n                  </button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* logout */}\r\n        <div\r\n          class=\"modal fade bd-example-modal-sm\"\r\n          tabindex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"mySmallModalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div class=\"modal-dialog modal-sm\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Are you sure want to logout?</h5>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-secondary\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  No\r\n                </button>\r\n                <Link\r\n                  to=\"/login\"\r\n                >\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-danger\"\r\n                    onClick={this.logoutApp}\r\n                  >\r\n                    Yes\r\n                  </button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLogin: state.auth.isLogin,\r\n    token: state.auth.token,\r\n    id: state.auth.id,\r\n    level: state.auth.level,\r\n    name: state.auth.name,\r\n    email: state.auth.email,\r\n    img: state.auth.img,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logoutRedux: () => dispatch(logout()),\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(navbar));\r\n",["220","221"],"D:\\Frontend\\blanja-app\\src\\pages\\home.js",[],"D:\\Frontend\\blanja-app\\src\\pages\\auth\\login.js",[],["222","223"],"D:\\Frontend\\blanja-app\\src\\pages\\search.js",["224","225"],"import React, { useState, useEffect } from \"react\";\r\nimport Rating from \"../components/rating\";\r\nimport Navbar from \"../components/navbar\";\r\nimport axios from \"axios\";\r\nimport { Card, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { blank } from \"../assets\";\r\n\r\nconst base_url = process.env.REACT_APP_API;\r\n\r\nconst SearchPage = ({ history }) => {\r\n  const [product, setProduct] = useState([]);\r\n  const [pageInfo, setPageInfo] = useState({});\r\n\r\n  console.log(history.location.search);\r\n\r\n  const getAllProducts = () => {\r\n    axios\r\n      .get(base_url + \"/search\" + history.location.search)\r\n      .then(({ data }) => {\r\n        console.log(data.data);\r\n        setProduct(data.data.products);\r\n        setPageInfo(data.data.pageInfo);\r\n      })\r\n      .catch((error) => {\r\n        setProduct([]);\r\n        setPageInfo([]);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllProducts(history.location.search);\r\n  }, [history.location.search]);\r\n\r\n  const { category } = history.location.search;\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Container>\r\n        {product.length > 0 ? (\r\n          <>\r\n            <p\r\n              style={{\r\n                fontSize: \"12px\",\r\n                color: \"#9b9b9b\",\r\n              }}\r\n            >\r\n              Home {\">\"} search {\">\"} <b>{category}</b>\r\n            </p>\r\n            <br />\r\n            <h2>What's you're looking for</h2>\r\n            <br />\r\n            <div className=\"row ml-2\">\r\n              {product.map(\r\n                ({\r\n                  product_name,\r\n                  product_img,\r\n                  product_price,\r\n                  product_brand,\r\n                  product_rating,\r\n                  category_name,\r\n                  color_name,\r\n                  size_name,\r\n                  rating,\r\n                  id,\r\n                }) => {\r\n                  return (\r\n                    <Card\r\n                      className=\"col-lg-2 col-md-3 col-sm-4 col-4 mr-3 ml-3 shadow bg-white rounded\"\r\n                      id=\"cards\"\r\n                      key={id}\r\n                    >\r\n                      <img\r\n                        src={\r\n                          product_img.split(\",\")[0] !== undefined\r\n                            ? `${process.env.REACT_APP_API}` +\r\n                              product_img.split(\",\")[0]\r\n                            : blank\r\n                        }\r\n                        className=\"card-img-top\"\r\n                        style={{ maxHeight: \"50%\" }}\r\n                        alt=\"...\"\r\n                      />\r\n\r\n                      <div className=\"card-body\">\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/detail/${id}`,\r\n                            product,\r\n                          }}\r\n                        >\r\n                          <h5 className=\"card-title\">{product_name}</h5>\r\n                        </Link>\r\n                        <p className=\"price\">Rp. {product_price}</p>\r\n                        <p className=\"text-muted\">{product_brand}</p>\r\n                        <Rating product_rating={product_rating} />\r\n                      </div>\r\n                    </Card>\r\n                  );\r\n                }\r\n              )}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h2>No Product</h2>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n",["226","227"],"D:\\Frontend\\blanja-app\\src\\pages\\category.js",[],"D:\\Frontend\\blanja-app\\src\\components\\productFooter.js",[],"D:\\Frontend\\blanja-app\\src\\components\\home\\popular.js",[],"D:\\Frontend\\blanja-app\\src\\assets\\index.js",[],"D:\\Frontend\\blanja-app\\src\\pages\\auth\\signup.js",[],"D:\\Frontend\\blanja-app\\src\\pages\\auth\\reset.js",[],["228","229"],"D:\\Frontend\\blanja-app\\src\\redux\\actions\\auth.js",[],["230","231"],"D:\\Frontend\\blanja-app\\src\\redux\\reducers\\auth.js",[],"D:\\Frontend\\blanja-app\\src\\redux\\store.js",[],"D:\\Frontend\\blanja-app\\src\\redux\\reducers\\cart.js",[],"D:\\Frontend\\blanja-app\\src\\redux\\reducers\\index.js",[],"D:\\Frontend\\blanja-app\\src\\redux\\actionTypes.js",[],"D:\\Frontend\\blanja-app\\src\\pages\\router.js",[],"D:\\Frontend\\blanja-app\\src\\pages\\detail.js",[],"D:\\Frontend\\blanja-app\\src\\index.js",[],"D:\\Frontend\\blanja-app\\src\\components\\rating.js",[],"D:\\Frontend\\blanja-app\\src\\pages\\trx\\bag.js",[],"D:\\Frontend\\blanja-app\\src\\pages\\trx\\checkout.js",["232","233","234","235"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\n// import { Redirect } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"../../components/navbar\";\r\nimport ModalChooseAddress from \"../../components/Modal/ModalChooseAddress\";\r\n// import ModalSelectPayment from \"../../components/Modal/ModalSelectPayment\";\r\nimport ModalAddAddress from \"../../components/Modal/ModalAddAddress\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./checkout.css\";\r\nimport colors from \"../../utility/colors.module.css\";\r\nimport text from \"../../utility/text.module.css\";\r\nimport classname from \"../../utility/classJoiner\";\r\nimport \"./modal.css\";\r\nimport { clearCart, clearCheckout } from \"../../redux/actions/cart\";\r\n\r\nimport gopay from \"../../assets/gopay.png\";\r\nimport pos from \"../../assets/pos.png\";\r\nimport mastercard from \"../../assets/master.png\";\r\n\r\nconst API = process.env.REACT_APP_API;\r\ntoast.configure();\r\n\r\nconst Checkout = ({ location, cart, history, props }) => {\r\n  const [showChooseAddress, setShowChooseAddress] = useState(false);\r\n  const [showAddAddress, setShowAddAddress] = useState(false);\r\n  const [payment, setPayment] = useState(\"\");\r\n  // const [showPayment, setShowPayment] = useState(false);\r\n  const [address, setAddress] = useState([]);\r\n  // const [getFirstAddress, setGetFirstAddress] = useState([]);\r\n  // const item = useSelector((state) => state.cart);\r\n  const ongkir = 15000;\r\n\r\n  const dispatch = useDispatch();\r\n  const { data } = location;\r\n  const uid = useSelector((state) => state.auth.id);\r\n  let token = useSelector((state) => state.auth.token);\r\n\r\n  // const {\r\n  //   id,\r\n  //   name,\r\n  //   address_name,\r\n  //   street,\r\n  //   city,\r\n  //   zip,\r\n  //   phone,\r\n  // } = props.location;\r\n  // console.log(\"toket\", id);\r\n  console.log(\"toket\", token);\r\n\r\n  const getAddressUser = async () => {\r\n    await axios\r\n      .get(`${API}/address/${uid}`, {\r\n        headers: {\r\n          \"x-access-token\": \"Bearer \" + token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const addressNull = res.data.data;\r\n        const addressData = res.data.data[0];\r\n\r\n        if (address === null) {\r\n          setAddress(addressNull);\r\n        } else {\r\n          setAddress(addressData);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAddressUser();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = window.addEventListener(\"focus\", () => {\r\n      getAddressUser();\r\n    });\r\n    return unsubscribe;\r\n  }, [window]);\r\n\r\n  console.log(\"address\", address);\r\n\r\n  const postTransaction = () => {\r\n    const info = {\r\n      user_id: uid,\r\n      qty: data !== undefined ? data[1] : null,\r\n      price: data !== undefined ? data[0] : null,\r\n      payment: payment,\r\n      // addreess_id: id,\r\n      o_status: 1,\r\n    };\r\n    axios\r\n      .post(`${API}/history/`, info)\r\n      .then((res) => {\r\n        console.log(\"Checkout info,\", res);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    dispatch(clearCart());\r\n    dispatch(clearCheckout());\r\n    toast.success(\"Checkout Success\", {\r\n      position: \"top-right\",\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: false,\r\n      draggable: true,\r\n    });\r\n  };\r\n\r\n  const submit = () => {\r\n    postTransaction();\r\n    history.push(\"/cart\");\r\n  };\r\n\r\n  const toPrice = (x) => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"container\">\r\n        <h1 style={{ marginTop: \"20px\" }}>Checkout</h1>\r\n        <div className=\"Wrapper\">\r\n          <div className=\"row\">\r\n            <p className=\"ttl-addrs\">Shipping Address</p>\r\n            {address.name !== undefined ? (\r\n              <>\r\n                <div className=\"col-11 address\">\r\n                  <p>{address.name}</p>\r\n                  <p>\r\n                    {`${address.address_name}, Jalan ${address.street}, Kota ${address.city}, Kodepos: ${address.zip}`}\r\n                  </p>\r\n                  <button\r\n                    className=\"btn-choose-address\"\r\n                    onClick={() => setShowChooseAddress(true)}\r\n                    style={{ display: \"flex\" }}\r\n                  >\r\n                    <p className=\"addres-btn\">Choose another address</p>\r\n                  </button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div\r\n                  className=\"col-12 address\"\r\n                  // style={{ justifyContent: \"center\" }}\r\n                >\r\n                  <button\r\n                    className=\"btn-choose-address\"\r\n                    onClick={() => setShowAddAddress(true)}\r\n                    style={{\r\n                      justifyContent: \"center\",\r\n                      width: \"100%\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      className=\"addres-btn\"\r\n                      style={{ color: \"black\", height: \"10px\" }}\r\n                    >\r\n                      Add new Address\r\n                    </p>\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n            <div className=\"BagWrapper\">\r\n              {cart.map((item) => {\r\n                return (\r\n                  <div className=\"CheckoutWrapper\">\r\n                    <div className=\"ProductInfo\">\r\n                      <img\r\n                        className=\"ProductImg\"\r\n                        src={item.image}\r\n                        alt=\"sample\"\r\n                      />\r\n                      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                        <p style={{ fontSize: \"16px\", fontWeight: \"bold\" }}>\r\n                          {item.name}\r\n                        </p>\r\n                        <p\r\n                          style={{\r\n                            fontSize: \"12px\",\r\n                            fontWeight: \"500\",\r\n                            color: \"#9B9B9B\",\r\n                          }}\r\n                        >\r\n                          {item.brand}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"TotalPrice\">\r\n                      <p\r\n                        style={{\r\n                          fontSize: \"16px\",\r\n                          fontWeight: \"600\",\r\n                          color: \"#222222\",\r\n                        }}\r\n                      >\r\n                        Rp {toPrice(item.price)}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"SummaryCard\">\r\n            <p style={{ fontSize: \"16px\", fontWeight: \"600\" }}>\r\n              Shopping Summary\r\n            </p>\r\n            <div className=\"TotalPrice\">\r\n              <p>Order</p>\r\n              <p>Rp. {data !== undefined ? toPrice(data[0]) : null}</p>\r\n            </div>\r\n            <button\r\n              data-toggle=\"modal\"\r\n              data-backdrop=\"false\"\r\n              data-target=\".checkout-modal\"\r\n              type=\"button\"\r\n              className=\"btn btn-danger BuyBtn\"\r\n              data-toggle=\"modal\"\r\n              data-target=\"#paymentModal\"\r\n            >\r\n              Select Payment\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <ModalChooseAddress\r\n        show={showChooseAddress}\r\n        onHide={() => setShowChooseAddress(false)}\r\n        showAddAddress={() => setShowAddAddress(true)}\r\n      />\r\n      {/* <ModalSelectPayment\r\n        show={showPayment}\r\n        onHide={() => setShowPayment(false)}\r\n        showAddAddress={() => setShowAddAddress(true)}\r\n        cart={cart.filter((item) => item.selected === true)}\r\n        onSubmit={() => submit()}\r\n        // handleSelectPayment={(evt) => handleSelectPayment(evt)}\r\n      /> */}\r\n      <ModalAddAddress\r\n        show={showAddAddress}\r\n        onHide={() => setShowAddAddress(false)}\r\n      />\r\n\r\n      {/* <!-- Modal --> */}\r\n      <div\r\n        class=\"modal fade\"\r\n        id=\"paymentModal\"\r\n        tabindex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"exampleModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div class=\"modal-dialog\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title text-top\" id=\"exampleModalLabel\">\r\n                Modal title\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                class=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body no-border modal-body-container\">\r\n              <div className=\"container-modal\">\r\n                <div className=\"row container-item-payment\">\r\n                  <h4\r\n                    className={classname(colors.blackText, \"text-title-head\")}\r\n                  >\r\n                    Payment Method\r\n                  </h4>\r\n                </div>\r\n                <div className=\"row align-items-center container-item-payment\">\r\n                  <img src={gopay} alt=\"\" />\r\n                  <h4 className=\"text-item-payment\">Gopay</h4>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"payment\"\r\n                    id=\"gopay\"\r\n                    value=\"gopay\"\r\n                    //   onChange={props.handleSelectPayment}\r\n                    className=\"ml-auto\"\r\n                    onClick={() => setPayment(\"Gopay\")}\r\n                  />\r\n                </div>\r\n                <div className=\"row align-items-center container-item-payment\">\r\n                  <img src={pos} alt=\"\" />\r\n                  <h4 className=\"text-item-payment\">Pos Indonesia</h4>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"payment\"\r\n                    id=\"pos\"\r\n                    value=\"pos\"\r\n                    //   onChange={props.handleSelectPayment}\r\n                    className=\"ml-auto\"\r\n                    onClick={() => setPayment(\"POS\")}\r\n                  />\r\n                </div>\r\n                <div className=\"row align-items-center container-item-payment\">\r\n                  <img src={mastercard} alt=\"\" />\r\n                  <h4 className=\"text-item-payment\">Mastercard</h4>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"payment\"\r\n                    id=\"mastercard\"\r\n                    //   onChange={props.handleSelectPayment}\r\n                    value=\"mastercard\"\r\n                    className=\"ml-auto\"\r\n                    onClick={() => setPayment(\"Mastercard\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-body no-border\">\r\n              <div className=\"container-modal\">\r\n                <div className=\"row container-item-payment\">\r\n                  <h4\r\n                    className={classname(colors.blackText, \"text-title-head\")}\r\n                  >\r\n                    Shopping summary\r\n                  </h4>\r\n                </div>\r\n                <div className=\"row align-items-center container-item-summary\">\r\n                  <h4 className={classname(colors.grayText, text.text)}>\r\n                    Order\r\n                  </h4>\r\n                  <h3 className=\"ml-auto text-price\">\r\n                    Rp. {data !== undefined ? toPrice(data[0] + ongkir) : null}\r\n                  </h3>\r\n                </div>\r\n                <div className=\"row align-items-center container-item-summary\">\r\n                  <h4 className={classname(colors.grayText, text.text)}>\r\n                    Delivery\r\n                  </h4>\r\n                  <h3 className=\"ml-auto text-price\">Rp {ongkir}</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-body shadow-lg\">\r\n              <div className=\"container-modal-footer\">\r\n                <div className=\"row\">\r\n                  <div className=\"col\">\r\n                    <h4\r\n                      className={classname(colors.blackText, \"text-title-head\")}\r\n                    >\r\n                      Shopping summary\r\n                    </h4>\r\n                    <h3 className={classname(colors.primaryText, \"text-price\")}>\r\n                      Rp.{\" \"}\r\n                      {data !== undefined ? toPrice(data[0] + ongkir) : null}\r\n                    </h3>\r\n                  </div>\r\n                  <div className=\"col-5 align-self-center\">\r\n                    <button className=\"btn btn-danger btn-bu\" onClick={submit}>\r\n                      Buy\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <div class=\"modal-footer \">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-secondary\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                Close\r\n              </button>\r\n              <button type=\"button\" class=\"btn btn-primary\">\r\n                Save changes\r\n              </button>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.cart.cart,\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Checkout));\r\n","D:\\Frontend\\blanja-app\\src\\redux\\actions\\cart.js",[],"D:\\Frontend\\blanja-app\\src\\components\\account\\list.js",["236"],"D:\\Frontend\\blanja-app\\src\\components\\account\\addProduct.js",["237","238","239"],"import React, { useState, useEffect } from \"react\";\r\nimport { Jumbotron, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Sidebar from \"../SidebarProfile/Sidebar\";\r\nimport Navbar from \"../Navbar\";\r\nimport formattext from \"../../assets/image/formattext.png\";\r\nimport main from \"../../assets/image/mainphoto.png\";\r\nimport secondary from \"../../assets/image/secondaryphoto.png\";\r\nimport styles from \"./styling.module.css\";\r\nimport \"./add.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Bounce, toast } from \"react-toastify\";\r\nimport { API } from \"../../utility/Auth\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\ntoast.configure();\r\nconst AddProduct = () => {\r\n  const [addP, setAddP] = useState(false)\r\n  useEffect(() => {\r\n    getCategory();\r\n    getSize();\r\n    getColor();\r\n    getCondition();\r\n    getStatus();\r\n  }, []);\r\n\r\n  const addOrRemoveSelected = (id) => {\r\n    const result = size.find((s) => s.id === id);\r\n    if (result.is_selected) {\r\n      const temp = size;\r\n      const index = temp.findIndex((e) => e.id === id);\r\n      temp[index][\"is_selected\"] = false;\r\n      setSize([...temp]);\r\n    } else {\r\n      const temp = size;\r\n      const index = temp.findIndex((e) => e.id === id);\r\n      temp[index][\"is_selected\"] = true;\r\n      setSize([...temp]);\r\n    }\r\n  };\r\n\r\n  const addOrRemoveColorSelected = (id) => {\r\n    const result = color.find((c) => c.id === id);\r\n    if (result.is_selected) {\r\n      const temp = color;\r\n      const index = temp.findIndex((e) => e.id === id);\r\n      temp[index][\"is_selected\"] = false;\r\n      setColor([...temp]);\r\n    } else {\r\n      const temp = color;\r\n      const index = temp.findIndex((e) => e.id === id);\r\n      temp[index][\"is_selected\"] = true;\r\n      setColor([...temp]);\r\n    }\r\n  };\r\n\r\n  const restructureIsSelected = (data) => {\r\n    const temp = data.map((data) => {\r\n      data[\"is_selected\"] = false;\r\n      return data;\r\n    });\r\n    return temp;\r\n  };\r\n\r\n  const [filePath, setFilePath] = useState([]);\r\n  const [prodName, setProdName] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [size, setSize] = useState([]);\r\n  const [color, setColor] = useState([]);\r\n  const [condition, setCondition] = useState([]);\r\n  const [prodPrice, setProdPrice] = useState(\"\");\r\n  const [prodQty, setProdQty] = useState(\"\");\r\n  const [prodDesc, setProdDesc] = useState(\"\");\r\n  const [status, setStatus] = useState([]);\r\n  const [ctg, setCtg] = useState(0);\r\n  const [cnd, setCnd] = useState(1);\r\n  const [sts, setSts] = useState(0);\r\n\r\n  console.log(\"Size Luar\", size);\r\n  console.log(\"color Luar\", color);\r\n\r\n  const token = useSelector((state) => state.auth.data.token);\r\n\r\n  const formatDataSizeToSend = (dataSize) => {\r\n    const selectedSizes = [];\r\n    dataSize.forEach((s) => {\r\n      if (s.is_selected) {\r\n        selectedSizes.push(s.id);\r\n      }\r\n    });\r\n    return selectedSizes;\r\n  };\r\n\r\n  const formatDataColorToSend = (dataColor) => {\r\n    const selectedColors = [];\r\n    console.log(\"SELECT\", selectedColors);\r\n    dataColor.forEach((c) => {\r\n      if (c.is_selected) {\r\n        selectedColors.push(c.id);\r\n      }\r\n    });\r\n    return selectedColors;\r\n  };\r\n\r\n  const getCategory = async () => {\r\n    await axios\r\n      .get(API + \"/categories\")\r\n      .then((res) => {\r\n        const categories = res.data.data;\r\n        setCategories(categories);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const getSize = async () => {\r\n    await axios\r\n      .get(API + \"/sizes\")\r\n      .then((res) => {\r\n        const size = res.data.data;\r\n        setSize(restructureIsSelected(size));\r\n        console.log(\"SIZE\", size);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const getColor = async () => {\r\n    await axios\r\n      .get(API + \"/colors\")\r\n      .then((res) => {\r\n        const color = res.data.data;\r\n        setColor(restructureIsSelected(color));\r\n        console.log(\"color\", restructureIsSelected(color));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const getCondition = async () => {\r\n    await axios\r\n      .get(API + \"/condition\")\r\n      .then((res) => {\r\n        const condition = res.data.data;\r\n        console.log(\"kondisi\", condition);\r\n        setCondition(condition);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const getStatus = async () => {\r\n    await axios\r\n      .get(API + \"/status\")\r\n      .then((res) => {\r\n        const status = res.data.data;\r\n        console.log(\"status\", status);\r\n        setStatus(status);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error status\", err);\r\n      });\r\n  };\r\n\r\n  const inputRef = React.useRef();\r\n  const handleFile = (e) => {\r\n    e.preventDefault();\r\n    inputRef.current.click();\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append(\"product_name\", prodName);\r\n    data.append(\"category_id\", ctg);\r\n    formatDataSizeToSend(size).map((element) => {\r\n      data.append(\"sizes[]\", JSON.stringify(element));\r\n    });\r\n    formatDataColorToSend(color).map((element) => {\r\n      data.append(\"colors[]\", JSON.stringify(element));\r\n    });\r\n    data.append(\"condition_id\", cnd);\r\n    data.append(\"product_price\", prodPrice);\r\n    data.append(\"product_qty\", prodQty);\r\n    data.append(\"product_desc\", prodDesc);\r\n    for (let i = 0; i < filePath.length; i++) {\r\n      data.append(\"image\", filePath[i]);\r\n    }\r\n\r\n    data.append(\"status_product_id\", sts);\r\n\r\n    await axios\r\n      .post(API + \"/products\", data, {\r\n        headers: {\r\n          \"x-access-token\": \"Bearer \" + token,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        toast.success(\"Yeah! Berhasil tambah product\", {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          transition: Bounce,\r\n        });\r\n        setAddP(true)\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"bisa error\", err.response);\r\n      });\r\n  };\r\n\r\n  if(addP === true) {\r\n    return <Redirect to=\"/myproduct\" />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div style={{ display: \"flex\" }}>\r\n        <Sidebar />\r\n        <div className=\"container-selling\">\r\n          <input\r\n            multiple\r\n            type=\"file\"\r\n            onChange={(e) => setFilePath(e.target.files)}\r\n            ref={inputRef}\r\n            name=\"image\"\r\n            className={styles.hiddeninput}\r\n          />\r\n          <Form>\r\n            <Jumbotron className=\"container-content\">\r\n              <h3>Inventory</h3>\r\n              <hr></hr>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                  <Form.Group controlId=\"product_name\">\r\n                    <Form.Label className=\"font-p-title\">\r\n                      Name of goods\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      placeholder=\"Product Name\"\r\n                      value={prodName}\r\n                      onChange={(e) => {\r\n                        setProdName(e.target.value);\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n              </div>\r\n            </Jumbotron>\r\n            <Jumbotron className=\"container-gap\">\r\n              <h3>Item details</h3>\r\n              <hr></hr>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                  <Form.Group controlId=\"product_price\">\r\n                    <Form.Label className=\"font-p-title\">Unit Price</Form.Label>\r\n                    <Form.Control\r\n                      placeholder=\"Price\"\r\n                      value={prodPrice}\r\n                      onChange={(e) => {\r\n                        setProdPrice(e.target.value);\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"product_stock\">\r\n                    <Form.Label className=\"font-p-title\">Stock</Form.Label>\r\n                    <Form.Control\r\n                      placeholder=\"Stock Product\"\r\n                      value={prodQty}\r\n                      onChange={(e) => {\r\n                        setProdQty(e.target.value);\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                  <div className=\"form-group\">\r\n                    <label>Category </label>\r\n                    <br></br>\r\n                    <select\r\n                      className=\"form-control col-6\"\r\n                      value={ctg}\r\n                      onChange={(e) => {\r\n                        setCtg(e.target.value);\r\n                      }}\r\n                    >\r\n                      {categories &&\r\n                        categories.map(({ id_categories, category_name }) => {\r\n                          return (\r\n                            <>\r\n                              <option value={id_categories}>\r\n                                {category_name}\r\n                              </option>\r\n                            </>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <Form.Group className=\"form-group\">\r\n                    <Form.Label>Colors </Form.Label>\r\n                    <br></br>\r\n                    <Form.Control\r\n                      className=\"form-control col-6\"\r\n                      multiple\r\n                      as=\"select\"\r\n                      value={color}\r\n                    >\r\n                      {color &&\r\n                        color.map(\r\n                          ({ id, color_name, is_selected, color_hexa }) => {\r\n                            return (\r\n                              <>\r\n                                <option\r\n                                  style={\r\n                                    is_selected === true\r\n                                      ? {\r\n                                          backgroundColor: color_hexa,\r\n                                          color: \"white\",\r\n                                        }\r\n                                      : { backgroundColor: \"white\" }\r\n                                  }\r\n                                  className=\"mb-1\"\r\n                                  key={id.toString()}\r\n                                  value={id}\r\n                                  onClick={() => {\r\n                                    addOrRemoveColorSelected(id);\r\n                                  }}\r\n                                >\r\n                                  {color_name}\r\n                                </option>\r\n                              </>\r\n                            );\r\n                          }\r\n                        )}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"form-group\">\r\n                    <Form.Label>Size </Form.Label>\r\n                    <br></br>\r\n                    <Form.Control\r\n                      className=\"form-control col-6\"\r\n                      multiple\r\n                      as=\"select\"\r\n                      value={size}\r\n                    >\r\n                      {size &&\r\n                        size.map(({ id, size, is_selected }) => {\r\n                          return (\r\n                            <option\r\n                              style={\r\n                                is_selected === true\r\n                                  ? { backgroundColor: \"red\", color: \"white\" }\r\n                                  : { backgroundColor: \"white\" }\r\n                              }\r\n                              className=\"mb-1\"\r\n                              key={id.toString()}\r\n                              value={id}\r\n                              onClick={() => {\r\n                                addOrRemoveSelected(id);\r\n                              }}\r\n                            >\r\n                              {size}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>Conditions Product </label>\r\n                    <br></br>\r\n                    <select\r\n                      className=\"form-control col-6\"\r\n                      value={cnd}\r\n                      onChange={(e) => {\r\n                        setCnd(e.target.value);\r\n                      }}\r\n                    >\r\n                      {condition &&\r\n                        condition.map(({ id, conditions }) => {\r\n                          return (\r\n                            <>\r\n                              <option value={id}>{conditions}</option>\r\n                            </>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>Status Product </label>\r\n                    <br></br>\r\n                    <select\r\n                      className=\"form-control col-6\"\r\n                      value={sts}\r\n                      onChange={(e) => {\r\n                        setSts(e.target.value);\r\n                      }}\r\n                    >\r\n                      {status &&\r\n                        status.map(({ id, name }) => {\r\n                          return (\r\n                            <>\r\n                              <option value={id}>{name}</option>\r\n                            </>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Jumbotron>\r\n            <Jumbotron className=\"container-gap\">\r\n              <h3>Photo of goods</h3>\r\n              <div className={styles.formcontainer}>\r\n                <div className={(styles.form, styles.formcontainer_img)}>\r\n                  <div className={styles.content_img}>\r\n                    <div className={styles.main_img}>\r\n                      <div className={styles.containerMainImg}>\r\n                        <img\r\n                          className={styles.mainImg}\r\n                          src={\r\n                            filePath[0]\r\n                              ? URL.createObjectURL(filePath[0])\r\n                              : main\r\n                          }\r\n                          alt=\"\"\r\n                        />\r\n                      </div>\r\n                      <p className={styles.mainPhoto}>Foto utama</p>\r\n                    </div>\r\n                    <div className={styles.secondary_img}>\r\n                      <img\r\n                        className={styles.secondaryImg}\r\n                        src={\r\n                          filePath[1]\r\n                            ? URL.createObjectURL(filePath[1])\r\n                            : secondary\r\n                        }\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className={styles.secondary_img}>\r\n                      <img\r\n                        className={styles.secondaryImg}\r\n                        src={\r\n                          filePath[2]\r\n                            ? URL.createObjectURL(filePath[2])\r\n                            : secondary\r\n                        }\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className={styles.secondary_img}>\r\n                      <img\r\n                        className={styles.secondaryImg}\r\n                        src={\r\n                          filePath[3]\r\n                            ? URL.createObjectURL(filePath[3])\r\n                            : secondary\r\n                        }\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className={styles.secondary_img}>\r\n                      <img\r\n                        className={styles.secondaryImg}\r\n                        src={\r\n                          filePath[4]\r\n                            ? URL.createObjectURL(filePath[4])\r\n                            : secondary\r\n                        }\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className={styles.edit_img}>\r\n                    <button onClick={handleFile} className={styles.btnupload}>\r\n                      Upload image\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Jumbotron>\r\n\r\n            <Jumbotron className=\"container-gap\">\r\n              <h3>Description</h3>\r\n              <hr></hr>\r\n              <div className={styles.formcontainer}>\r\n                <div\r\n                  className={(styles.form, styles.formcontainer_description)}\r\n                >\r\n                  <img\r\n                    src={formattext}\r\n                    alt=\"\"\r\n                    style={{ backgroundColor: \"white\" }}\r\n                  />\r\n                  <textarea\r\n                    value={prodDesc}\r\n                    className={styles.content_description}\r\n                    onChange={(e) => {\r\n                      setProdDesc(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Jumbotron>\r\n            <div className=\"container-btn d-flex justify-content-end mb-5\">\r\n              <button\r\n                className=\"btn-login-nav save\"\r\n                onClick={(e) => handleSubmit(e)}\r\n              >\r\n                Jual\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n","D:\\Frontend\\blanja-app\\src\\components\\account\\sidebar.js",["240"],"import React from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  account,\r\n  address,\r\n  bag,\r\n  pen,\r\n  home,\r\n  order,\r\n  product,\r\n  user,\r\n} from \"../../assets/\";\r\nimport \"./sidebar.css\";\r\n\r\nconst Sidebar = (props) => {\r\n  const name = useSelector((state) => state.auth.name);\r\n\r\n  return (\r\n    <div className=\"container-sidebar\">\r\n      <div className=\"content-sidebar\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <div className=\"dp-profil\">\r\n            <img className=\"img-profil\" src={user} alt=\"\" />\r\n          </div>\r\n          <div className=\"ml-4\">\r\n            <p>{name}</p>\r\n            <div className=\"d-flex margin-up\">\r\n              <div className=\"mr-1\">\r\n                <Link>\r\n                  <img height=\"16px\" width=\"16px\" src={pen} alt=\"\" />\r\n                </Link>\r\n              </div>\r\n              <p>Ubah Profile</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {props.auth.level === 1 ? (\r\n          <div className=\"mt-5 ml-5 btnside\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div className=\"icon\" style={{ backgroundColor: \"#456BF3\" }}>\r\n                <img alt=\"\" src={home} />\r\n              </div>\r\n              <Dropdown className=\"d-flex\">\r\n                <Link to=\"/account\">\r\n                  <p className=\"mr-2\">Store</p>\r\n                </Link>\r\n              </Dropdown>\r\n            </div>\r\n\r\n            <div className=\"d-flex justify-content-between mt-3\">\r\n              <div className=\"icon\" style={{ backgroundColor: \"#F36F45\" }}>\r\n                <img alt=\"\" src={product} />\r\n              </div>\r\n              <Dropdown className=\"d-flex\">\r\n                <p className=\"mr-2\">Product</p>\r\n                <Dropdown.Toggle\r\n                  split\r\n                  variant=\"light\"\r\n                  id=\"dropdown-split-basic\"\r\n                />\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item>\r\n                    <Link to=\"/product\">My Product</Link>\r\n                  </Dropdown.Item>\r\n\r\n                  <Dropdown.Item>\r\n                    <Link to=\"/add\">Sellng Products</Link>\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n\r\n            {/* <div className=\"d-flex justify-content-between mt-3\">\r\n              <div className=\"icon\" style={{ backgroundColor: \"#F3456F\" }}>\r\n                <img alt=\"\" src={bag} />\r\n              </div>\r\n              <Dropdown className=\"d-flex\">\r\n                <p className=\"mr-2\">Order</p>\r\n                <Dropdown.Toggle\r\n                  split\r\n                  variant=\"light\"\r\n                  id=\"dropdown-split-basic\"\r\n                />\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item href=\"#/action-1\">My Order</Dropdown.Item>\r\n                  <Dropdown.Item href=\"#/action-1\">Order Cancel </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div> */}\r\n          </div>\r\n        ) : (\r\n          <div className=\"mt-5 ml-5 btnside\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div className=\"icon\" style={{ backgroundColor: \"#456BF3\" }}>\r\n                <img alt=\"\" src={account} />\r\n              </div>\r\n              <Dropdown className=\"d-flex\">\r\n                <Link to=\"/account\">\r\n                  <p className=\"mr-2 text-dark\">My Account</p>\r\n                </Link>\r\n              </Dropdown>\r\n            </div>\r\n\r\n            <div className=\"d-flex justify-content-between mt-3\">\r\n              <div className=\"icon\" style={{ backgroundColor: \"#F36F45\" }}>\r\n                <img alt=\"\" src={address} />\r\n              </div>\r\n              <Dropdown className=\"d-flex\">\r\n                <Link to=\"/address\">\r\n                  <p className=\"mr-2 text-dark\">Shipping Address</p>\r\n                </Link>\r\n              </Dropdown>\r\n            </div>\r\n\r\n            <div className=\"d-flex justify-content-between mt-3\">\r\n              <div className=\"icon\" style={{ backgroundColor: \"#F3456F\" }}>\r\n                <img alt=\"\" src={order} />\r\n              </div>\r\n              <Dropdown className=\"d-flex\">\r\n                <Link to=\"/order\">\r\n                  <p className=\"mr-2 text-dark\">My Order</p>\r\n                </Link>\r\n              </Dropdown>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"container-btn d-flex justify-content-center mb-5\">\r\n          <Link to=\"/change\">\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              style={{ width: \"170px\" }}\r\n              // onClick={(e) => handleSubmit(e)}\r\n            >\r\n              Change Password\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n  return {\r\n    auth,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Sidebar);\r\n","D:\\Frontend\\blanja-app\\src\\components\\account\\editProduct.js",["241","242","243","244","245","246","247","248"],"D:\\Frontend\\blanja-app\\src\\components\\trx\\bag.js",[],"D:\\Frontend\\blanja-app\\src\\components\\product.js",["249","250"],"D:\\Frontend\\blanja-app\\src\\components\\Modal\\ModalAddAddress.js",[],"D:\\Frontend\\blanja-app\\src\\components\\Modal\\ModalChooseAddress.js",["251"],"D:\\Frontend\\blanja-app\\src\\pages\\account\\listProduct.js",["252"],"D:\\Frontend\\blanja-app\\src\\pages\\account\\profile.js",[],"D:\\Frontend\\blanja-app\\src\\components\\home\\carousel.js",["253","254"],"import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport { card1, card2, card3, card4, next, prev } from \"../../../src/assets\";\r\nimport \"./carousel.css\";\r\n\r\nconst NextArrow = (props) => {\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{\r\n        ...style,\r\n        display: \"block\",\r\n        background: \"white\",\r\n        padding: \"1.5vw\",\r\n        borderRadius: \"50%\",\r\n        marginRight: \"4vw\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        border: \"1px solid grey\"\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      <img src={next} alt=\"\" className=\"topslider-arrow\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PrevArrow = (props) => {\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{\r\n        ...style,\r\n        display: \"block\",\r\n        background: \"white\",\r\n        marginLeft: \"4vw\",\r\n        zIndex: 1,\r\n        padding: \"1.5vw\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        borderRadius: \"50%\",\r\n        border: \"1px solid grey\"\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      <img src={prev} alt=\"\" className=\"topslider-arrow\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst carousell = () => {\r\n  const data = [\r\n    {\r\n      id: card1,\r\n      name: \"Special Edition\",\r\n    },\r\n    {\r\n      id: card2,\r\n      name: \"Trends In 2021\",\r\n    },\r\n    {\r\n      id: card3,\r\n      name: \"Black Edition\",\r\n    },\r\n    {\r\n      id: card4,\r\n      name: \"Winter Sale\",\r\n    },\r\n  ];\r\n\r\n  const settings = {\r\n    dots: true,\r\n    className: \"top-slider\",\r\n    centerMode: true,\r\n    infinite: true,\r\n    slidesToShow: 2,\r\n    slidesToScroll: 1,\r\n    // centerPadding: '160px',\r\n    speed: 500,\r\n    autoplaySpeed: 5000,\r\n    autoplay: true,\r\n    arrows: true,\r\n    nextArrow: <NextArrow />,\r\n    prevArrow: <PrevArrow />,\r\n    responsive: [\r\n      {\r\n        breakpoint: 992,\r\n        settings: {\r\n          arrows: true,\r\n          centerMode: true,\r\n          slidesToShow: 1,\r\n          centerPadding: \"100px\",\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 768,\r\n        settings: {\r\n          arrows: true,\r\n          centerMode: true,\r\n          slidesToShow: 1,\r\n          centerPadding: \"25px\",\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          arrows: false,\r\n          centerMode: false,\r\n          slidesToShow: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div>\r\n          <Slider {...settings}>\r\n            {data.map((item, index) => {\r\n              return (\r\n                <div className=\"topslider-items\" key={index}>\r\n                  <div className=\"topslider-item\">\r\n                    <img\r\n                      src={item.id}\r\n                      alt=\"\"\r\n                      className=\"slider-top-img img-fluid\"\r\n                    />\r\n                    <p className=\"promo-name\">{item.name}</p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </Slider>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default carousell;\r\n","D:\\Frontend\\blanja-app\\src\\utility\\classJoiner.js",["255"],"D:\\Frontend\\blanja-app\\src\\pages\\404.js",[],"D:\\Frontend\\blanja-app\\src\\components\\account\\AddProduct.js",["256","257"],"D:\\Frontend\\blanja-app\\src\\components\\account\\EditProduct.js",["258","259","260","261","262"],"D:\\Frontend\\blanja-app\\src\\pages\\protect.js",[],["263","264"],"D:\\Frontend\\blanja-app\\src\\components\\account\\user.js",["265","266","267","268","269"],"D:\\Frontend\\blanja-app\\src\\components\\account\\ChangePassword.js",[],"D:\\Frontend\\blanja-app\\src\\components\\account\\ShippingAddress.js",["270"],"D:\\Frontend\\blanja-app\\src\\components\\account\\GetOrder.js",["271","272"],"D:\\Frontend\\blanja-app\\src\\pages\\auth\\forgot.js",[],"D:\\Frontend\\blanja-app\\src\\pages\\chat.js",["273","274","275"],"import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Navbar from \"../components/navbar\";\r\nimport \"./chat.css\";\r\nimport sendIcon from \"../assets/send.png\";\r\nimport { avatar } from \"../assets\";\r\n\r\nconst API = process.env.REACT_APP_API;\r\n\r\nlet socket;\r\n\r\nconst Chat = (props) => {\r\n  console.log(\"PROPS\", props);\r\n  //   const socket = useSocket();\r\n\r\n  const [sellerId, setSellerId] = useState(0);\r\n  const [chatMessage, setChatMessage] = useState(\"\");\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  //   const [socket, setSocket] = useState();\r\n\r\n  const user_id = useSelector((state) => state.auth.id);\r\n  const user_name = useSelector((state) => state.auth.name);\r\n\r\n  useEffect(() => {\r\n    socket = io(API, {\r\n      query: { user_id },\r\n    });\r\n    // setSocket(newSocketConnection);\r\n    // console.log(\"NEWNEW\", newSocketConnection);\r\n\r\n    // return () => newSocketConnection.close();\r\n  }, [user_id]);\r\n\r\n  useEffect(() => {\r\n    if (props.location && props.location.seller_id) {\r\n      console.log(\"LALA\", props.location.seller_id);\r\n      setSellerId(props.location.seller_id);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"chat message\", (msg) => {\r\n      setChatMessages((chatMessages) => [...chatMessages, msg]);\r\n      if (user_id !== msg.sender) {\r\n        setSellerId(msg.sender);\r\n      }\r\n    });\r\n    return () => {\r\n      socket.off(\"chat message\");\r\n    };\r\n  }, []);\r\n\r\n  const submitChatMessage = () => {\r\n    socket.emit(\r\n      \"chat message\",\r\n      { chatMessage, sender: user_id, senderName: user_name },\r\n      sellerId\r\n    );\r\n    setChatMessage(\"\");\r\n  };\r\n  console.log(\"USER ID \", user_id);\r\n  console.log(\"SellerID\", sellerId);\r\n  console.log(\"length \" + chatMessages.length);\r\n  console.log(\"MESSAGE\", chatMessage);\r\n\r\n  console.log(\"SOCKET\", socket);\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n          <Navbar />\r\n        </div>\r\n        <div className=\"section-chat\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-4 d-flex justify-content-end\">\r\n              <div className=\"list-chat\">\r\n                <div className=\"listchat-header\">\r\n                  <h5 style={{ fontWeight: \"bold\" }}>Chat</h5>\r\n                </div>\r\n                <div className=\"list-user\">\r\n                  <div style={{ marginBottom: \"5vh\" }}>\r\n                    <h4 style={{ fontWeight: \"bold\", fontSize: \"16px\" }}>\r\n                      User Dummy\r\n                    </h4>\r\n                    <p style={{ fontSize: \"small\", color: \"#9B9B9B\" }}>\r\n                      Data Dummy\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-8\">\r\n              <div className=\"text-message\">\r\n                {chatMessages &&\r\n                  chatMessages.length !== 0 &&\r\n                  chatMessages.map(\r\n                    ({ chatMessage, sender, senderName }, index) => {\r\n                      return (\r\n                        <div className=\"messaging\" key={index}>\r\n                          <div className=\"message-header\">\r\n                            <h5 style={{ fontWeight: \"bold\" }}>{senderName}</h5>\r\n                          </div>\r\n                          <div className=\"chatting\">\r\n                            <p>{chatMessage}....</p>\r\n                          </div>\r\n                          <div className=\"input-message\">\r\n                            {sender === user_id ? \"You\" : senderName}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    }\r\n                  )}\r\n                <div\r\n                  class=\"form-group\"\r\n                  //   style={{ width: \"90%\", paddingTop: \"350px\" }}\r\n                >\r\n                  <form>\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      style={{\r\n                        borderRadius: \"23px\",\r\n                        padding: \"0 1.4vw\",\r\n                        width: \"90%\",\r\n                        marginLeft: \"5vw\"\r\n                      }}\r\n                      value={chatMessage}\r\n                      onSubmit={() => submitChatMessage()}\r\n                      onChange={(chatMessage) => {\r\n                        setChatMessage(chatMessage.target.value);\r\n                      }}\r\n                      autocomplete=\"off\"\r\n                      placeholder=\"type message..\"\r\n                    />\r\n                    <div\r\n                      className=\"btn btn-danger send\"\r\n                      onClick={submitChatMessage}\r\n                    //   style={{marginTop: \"5vw\"}}\r\n                    >\r\n                      <img src={sendIcon} alt=\"\" />\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","D:\\Frontend\\blanja-app\\src\\pages\\auth\\otp.js",[],"D:\\Frontend\\blanja-app\\src\\pages\\private.js",[],"D:\\Frontend\\blanja-app\\src\\reportWebVitals.js",[],{"ruleId":"276","severity":1,"message":"277","line":39,"column":13,"nodeType":"278","messageId":"279","endLine":39,"endColumn":20},{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","severity":1,"message":"285","line":3,"column":28,"nodeType":"286","messageId":"287","endLine":3,"endColumn":36},{"ruleId":"280","replacedBy":"288"},{"ruleId":"282","replacedBy":"289"},{"ruleId":"280","replacedBy":"290"},{"ruleId":"282","replacedBy":"291"},{"ruleId":"284","severity":1,"message":"292","line":13,"column":10,"nodeType":"286","messageId":"287","endLine":13,"endColumn":18},{"ruleId":"293","severity":1,"message":"294","line":34,"column":6,"nodeType":"295","endLine":34,"endColumn":31,"suggestions":"296"},{"ruleId":"280","replacedBy":"297"},{"ruleId":"282","replacedBy":"298"},{"ruleId":"280","replacedBy":"299"},{"ruleId":"282","replacedBy":"300"},{"ruleId":"280","replacedBy":"301"},{"ruleId":"282","replacedBy":"302"},{"ruleId":"293","severity":1,"message":"303","line":77,"column":6,"nodeType":"295","endLine":77,"endColumn":8,"suggestions":"304"},{"ruleId":"293","severity":1,"message":"305","line":84,"column":6,"nodeType":"295","endLine":84,"endColumn":14,"suggestions":"306"},{"ruleId":"307","severity":1,"message":"308","line":227,"column":15,"nodeType":"309","endLine":227,"endColumn":34},{"ruleId":"307","severity":1,"message":"308","line":228,"column":15,"nodeType":"309","endLine":228,"endColumn":42},{"ruleId":"293","severity":1,"message":"310","line":59,"column":6,"nodeType":"295","endLine":59,"endColumn":8,"suggestions":"311"},{"ruleId":"293","severity":1,"message":"312","line":26,"column":6,"nodeType":"295","endLine":26,"endColumn":8,"suggestions":"313"},{"ruleId":"314","severity":1,"message":"315","line":181,"column":46,"nodeType":"316","messageId":"317","endLine":181,"endColumn":48},{"ruleId":"314","severity":1,"message":"315","line":184,"column":48,"nodeType":"316","messageId":"317","endLine":184,"endColumn":50},{"ruleId":"284","severity":1,"message":"318","line":8,"column":3,"nodeType":"286","messageId":"287","endLine":8,"endColumn":6},{"ruleId":"284","severity":1,"message":"319","line":8,"column":8,"nodeType":"286","messageId":"287","endLine":8,"endColumn":12},{"ruleId":"284","severity":1,"message":"320","line":9,"column":8,"nodeType":"286","messageId":"287","endLine":9,"endColumn":17},{"ruleId":"284","severity":1,"message":"321","line":25,"column":5,"nodeType":"286","messageId":"287","endLine":25,"endColumn":18},{"ruleId":"284","severity":1,"message":"322","line":28,"column":5,"nodeType":"286","messageId":"287","endLine":28,"endColumn":10},{"ruleId":"284","severity":1,"message":"323","line":29,"column":5,"nodeType":"286","messageId":"287","endLine":29,"endColumn":11},{"ruleId":"293","severity":1,"message":"312","line":38,"column":6,"nodeType":"295","endLine":38,"endColumn":8,"suggestions":"324"},{"ruleId":"314","severity":1,"message":"315","line":218,"column":46,"nodeType":"316","messageId":"317","endLine":218,"endColumn":48},{"ruleId":"314","severity":1,"message":"315","line":221,"column":48,"nodeType":"316","messageId":"317","endLine":221,"endColumn":50},{"ruleId":"284","severity":1,"message":"325","line":52,"column":7,"nodeType":"286","messageId":"287","endLine":52,"endColumn":10},{"ruleId":"284","severity":1,"message":"326","line":53,"column":7,"nodeType":"286","messageId":"287","endLine":53,"endColumn":11},{"ruleId":"293","severity":1,"message":"327","line":27,"column":6,"nodeType":"295","endLine":27,"endColumn":8,"suggestions":"328"},{"ruleId":"284","severity":1,"message":"329","line":5,"column":10,"nodeType":"286","messageId":"287","endLine":5,"endColumn":19},{"ruleId":"276","severity":1,"message":"277","line":18,"column":9,"nodeType":"278","messageId":"279","endLine":18,"endColumn":16},{"ruleId":"276","severity":1,"message":"277","line":42,"column":9,"nodeType":"278","messageId":"279","endLine":42,"endColumn":16},{"ruleId":"330","severity":1,"message":"331","line":1,"column":1,"nodeType":"332","endLine":3,"endColumn":3},{"ruleId":"284","severity":1,"message":"333","line":30,"column":18,"nodeType":"286","messageId":"287","endLine":30,"endColumn":27},{"ruleId":"284","severity":1,"message":"334","line":31,"column":16,"nodeType":"286","messageId":"287","endLine":31,"endColumn":23},{"ruleId":"284","severity":1,"message":"321","line":31,"column":5,"nodeType":"286","messageId":"287","endLine":31,"endColumn":18},{"ruleId":"284","severity":1,"message":"335","line":32,"column":5,"nodeType":"286","messageId":"287","endLine":32,"endColumn":15},{"ruleId":"284","severity":1,"message":"336","line":33,"column":5,"nodeType":"286","messageId":"287","endLine":33,"endColumn":15},{"ruleId":"284","severity":1,"message":"333","line":48,"column":18,"nodeType":"286","messageId":"287","endLine":48,"endColumn":27},{"ruleId":"284","severity":1,"message":"334","line":49,"column":16,"nodeType":"286","messageId":"287","endLine":49,"endColumn":23},{"ruleId":"280","replacedBy":"337"},{"ruleId":"282","replacedBy":"338"},{"ruleId":"293","severity":1,"message":"339","line":42,"column":6,"nodeType":"295","endLine":42,"endColumn":8,"suggestions":"340"},{"ruleId":"293","severity":1,"message":"339","line":46,"column":6,"nodeType":"295","endLine":46,"endColumn":8,"suggestions":"341"},{"ruleId":"284","severity":1,"message":"342","line":56,"column":18,"nodeType":"286","messageId":"287","endLine":56,"endColumn":27},{"ruleId":"284","severity":1,"message":"343","line":103,"column":9,"nodeType":"286","messageId":"287","endLine":103,"endColumn":19},{"ruleId":"284","severity":1,"message":"344","line":137,"column":9,"nodeType":"286","messageId":"287","endLine":137,"endColumn":21},{"ruleId":"293","severity":1,"message":"345","line":32,"column":6,"nodeType":"295","endLine":32,"endColumn":8,"suggestions":"346"},{"ruleId":"293","severity":1,"message":"347","line":38,"column":6,"nodeType":"295","endLine":38,"endColumn":8,"suggestions":"348"},{"ruleId":"349","severity":1,"message":"350","line":58,"column":17,"nodeType":"351","endLine":58,"endColumn":67},{"ruleId":"284","severity":1,"message":"352","line":7,"column":10,"nodeType":"286","messageId":"287","endLine":7,"endColumn":16},{"ruleId":"293","severity":1,"message":"353","line":40,"column":6,"nodeType":"295","endLine":40,"endColumn":8,"suggestions":"354"},{"ruleId":"293","severity":1,"message":"355","line":52,"column":6,"nodeType":"295","endLine":52,"endColumn":8,"suggestions":"356"},"no-dupe-keys","Duplicate key 'display'.","ObjectExpression","unexpected","no-native-reassign",["357"],"no-negated-in-lhs",["358"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar",["357"],["358"],["357"],["358"],"'pageInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllProducts'. Either include it or remove the dependency array.","ArrayExpression",["359"],["357"],["358"],["357"],["358"],["357"],["358"],"React Hook useEffect has a missing dependency: 'getAddressUser'. Either include it or remove the dependency array.",["360"],"React Hook useEffect has a missing dependency: 'getAddressUser'. Either include it or remove the dependency array. Outer scope values like 'window' aren't valid dependencies because mutating them doesn't re-render the component.",["361"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'getAllProduct'. Either include it or remove the dependency array.",["362"],"React Hook useEffect has missing dependencies: 'getColor' and 'getSize'. Either include them or remove the dependency array.",["363"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'bag' is defined but never used.","'main' is defined but never used.","'secondary' is defined but never used.","'category_name' is assigned a value but never used.","'sizes' is assigned a value but never used.","'colors' is assigned a value but never used.",["364"],"'uid' is assigned a value but never used.","'qtys' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'address' and 'getAddressUser'. Either include them or remove the dependency array.",["365"],"'Container' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'setUserId' is assigned a value but never used.","'setRate' is assigned a value but never used.","'sizes_name' is assigned a value but never used.","'color_name' is assigned a value but never used.",["357"],["358"],"React Hook useEffect has missing dependencies: 'getUser' and 'users'. Either include them or remove the dependency array.",["366"],["367"],"'setImagez' is assigned a value but never used.","'handleFile' is assigned a value but never used.","'handleUpload' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'changeAddress' and 'getAddressUser'. Either include them or remove the dependency array.",["368"],"React Hook useEffect has a missing dependency: 'getOrder'. Either include it or remove the dependency array.",["369"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'avatar' is defined but never used.","React Hook useEffect has a missing dependency: 'props.location'. Either include it or remove the dependency array.",["370"],"React Hook useEffect has a missing dependency: 'user_id'. Either include it or remove the dependency array.",["371"],"no-global-assign","no-unsafe-negation",{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"374","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"379","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"384","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},"Update the dependencies array to be: [getAllProducts, history.location.search]",{"range":"395","text":"396"},"Update the dependencies array to be: [getAddressUser]",{"range":"397","text":"398"},{"range":"399","text":"398"},"Update the dependencies array to be: [getAllProduct]",{"range":"400","text":"401"},"Update the dependencies array to be: [getColor, getSize]",{"range":"402","text":"403"},{"range":"404","text":"403"},"Update the dependencies array to be: [address, getAddressUser]",{"range":"405","text":"406"},"Update the dependencies array to be: [getUser, users]",{"range":"407","text":"408"},{"range":"409","text":"408"},"Update the dependencies array to be: [changeAddress, getAddressUser]",{"range":"410","text":"411"},"Update the dependencies array to be: [getOrder]",{"range":"412","text":"413"},"Update the dependencies array to be: [props.location]",{"range":"414","text":"415"},"Update the dependencies array to be: [user_id]",{"range":"416","text":"417"},[986,1011],"[getAllProducts, history.location.search]",[2543,2545],"[getAddressUser]",[2702,2710],[1609,1611],"[getAllProduct]",[902,904],"[getColor, getSize]",[1094,1096],[916,918],"[address, getAddressUser]",[1230,1232],"[getUser, users]",[1285,1287],[1154,1156],"[changeAddress, getAddressUser]",[1096,1098],"[getOrder]",[1201,1203],"[props.location]",[1495,1497],"[user_id]"]